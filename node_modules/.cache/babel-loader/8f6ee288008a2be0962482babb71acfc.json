{"ast":null,"code":"import _objectSpread from \"C:/Users/Fardin/Documents/ngoding/bookstores/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      items: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    user: \"auth/user\"\n  })),\n  methods: _objectSpread({}, mapActions({\n    setAlert: \"alert/set\"\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    var config = {\n      headers: {\n        Authorization: \"Bearer\" + this.user.api_token\n      }\n    };\n    this.axios.post(\"/my-order\", {}, config).then(function (response) {\n      var data = response.data.data;\n      _this.items = data;\n    }).catch(function (error) {\n      var data = error.response.data;\n\n      _this.setAlert({\n        status: true,\n        text: data.message,\n        color: \"error\"\n      });\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;EACAA,IADA,kBACA;IACA;MACAC;IADA;EAGA,CALA;EAMAC,4BACAC;IACAC;EADA,EADA,CANA;EAWAC,2BACAC;IACAC;EADA,EADA,CAXA;EAgBAC,OAhBA,qBAgBA;IAAA;;IACA;MACAC;QACAC;MADA;IADA;IAKA,WACAC,IADA,CACA,WADA,EACA,EADA,EACAC,MADA,EAEAC,IAFA,CAEA;MACA;MACA;IACA,CALA,EAMAC,KANA,CAMA;MACA;;MACA;QACAC,YADA;QAEAC,kBAFA;QAGAC;MAHA;IAKA,CAbA;EAcA;AApCA","names":["data","items","computed","mapGetters","user","methods","mapActions","setAlert","mounted","headers","Authorization","post","config","then","catch","status","text","color"],"sourceRoot":"src/views","sources":["MyOrderView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-subheader>History Belanja</v-subheader>\r\n    <v-card flat>\r\n      <v-container>\r\n        <v-simple-table>\r\n          <tbody>\r\n            <tr v-for=\"item in items\" :key=\"item.id\">\r\n              <td>\r\n                <br />\r\n                Invoice: {{ item.invoice_number }}\r\n                <div class=\"primary--text title\">\r\n                  Rp. {{ item.total_price.toLocaleString(\"id-ID\") }}\r\n                </div>\r\n                <small\r\n                  >date: {{ item.updated_at }}. <br />courier:\r\n                  {{ item.courier_service }}. <br />status:\r\n                  {{ item.status }}</small\r\n                ><br /><br />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table>\r\n      </v-container>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      user: \"auth/user\",\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      setAlert: \"alert/set\",\r\n    }),\r\n  },\r\n  mounted() {\r\n    let config = {\r\n      headers: {\r\n        Authorization: \"Bearer\" + this.user.api_token,\r\n      },\r\n    };\r\n    this.axios\r\n      .post(\"/my-order\", {}, config)\r\n      .then((response) => {\r\n        let { data } = response.data;\r\n        this.items = data;\r\n      })\r\n      .catch((error) => {\r\n        let { data } = error.response;\r\n        this.setAlert({\r\n          status: true,\r\n          text: data.message,\r\n          color: \"error\",\r\n        });\r\n      });\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}