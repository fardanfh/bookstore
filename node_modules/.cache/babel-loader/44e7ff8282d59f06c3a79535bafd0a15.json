{"ast":null,"code":"import _objectSpread from \"C:/Users/Fardin/Documents/ngoding/bookstores/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"login\",\n  data: function data() {\n    return {\n      valid: true,\n      email: \"danfardan16@gmail.com\",\n      emailRules: [function (v) {\n        return !!v || \"E-mail is required\";\n      }, function (v) {\n        return /([a-zA-Z0-9_]{1,})(@)([a-zA-Z0-9_]{2,}).([a-zA-Z0-9_]{2,})+/.test(v) || \"E-mail must be valid\";\n      }],\n      showPassword: false,\n      password: \"\",\n      passwordRules: [function (v) {\n        return !!v || \"Password required.\";\n      }, function (v) {\n        return v && v.length >= 6 || \"Min 6 characters\";\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    user: \"auth/user\"\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    setAlert: \"alert/set\",\n    setStatusDialog: \"dialog/setStatus\",\n    setAuth: \"auth/set\"\n  })), {}, {\n    close: function close() {\n      this.setStatusDialog(false);\n    },\n    submit: function submit() {\n      var _this = this;\n\n      if (this.$refs.form.validate()) {\n        var formData = {\n          email: this.email,\n          password: this.password\n        };\n        this.axios.post(\"/login\", formData).then(function (response) {\n          var data_user = response.data.data;\n\n          _this.setAuth(data_user);\n\n          if (_this.user.id > 0) {\n            _this.setAlert({\n              status: true,\n              text: \"Login success\",\n              type: \"success\"\n            });\n\n            _this.setStatusDialog(false);\n          } else {\n            _this.setAlert({\n              status: true,\n              text: \"Login error\",\n              type: \"error\"\n            });\n          }\n        }).catch(function (error) {\n          var responses = error.response;\n\n          _this.setAlert({\n            status: true,\n            text: responses.data.message,\n            type: \"error\"\n          });\n        });\n      }\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;EACAA,aADA;EAEAC,IAFA,kBAEA;IACA;MACAC,WADA;MAEAC,8BAFA;MAGAC,aACA;QAAA;MAAA,CADA,EAEA;QAAA,OACA,mEACAC,CADA,KAEA,sBAHA;MAAA,CAFA,CAHA;MAUAC,mBAVA;MAWAC,YAXA;MAYAC,gBACA;QAAA;MAAA,CADA,EAEA;QAAA;MAAA,CAFA;IAZA;EAiBA,CApBA;EAqBAC,4BACAC;IACAC;EADA,EADA,CArBA;EA0BAC,yCACAC;IACAC,qBADA;IAEAC,mCAFA;IAGAC;EAHA,EADA;IAMAC,KANA,mBAMA;MACA;IACA,CARA;IASAC,MATA,oBASA;MAAA;;MACA;QACA;UACAf,iBADA;UAEAI;QAFA;QAIA,WACAY,IADA,CACA,QADA,EACAC,QADA,EAEAC,IAFA,CAEA;UACA;;UACA;;UACA;YACA;cACAC,YADA;cAEAC,qBAFA;cAGAC;YAHA;;YAKA;UACA,CAPA,MAOA;YACA;cACAF,YADA;cAEAC,mBAFA;cAGAC;YAHA;UAKA;QACA,CAnBA,EAoBAC,KApBA,CAoBA;UACA;;UACA;YACAH,YADA;YAEAC,4BAFA;YAGAC;UAHA;QAKA,CA3BA;MA4BA;IACA;EA5CA;AA1BA","names":["name","data","valid","email","emailRules","v","showPassword","password","passwordRules","computed","mapGetters","user","methods","mapActions","setAlert","setStatusDialog","setAuth","close","submit","post","formData","then","status","text","type","catch"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\r\n  <v-card>\r\n    <v-toolbar dark color=\"primary\">\r\n      <v-btn icon dark @click=\"close\">\r\n        <v-icon>mdi mdi-close</v-icon>\r\n      </v-btn>\r\n      <v-toolbar-title>Login and Start Shopping!</v-toolbar-title>\r\n    </v-toolbar>\r\n    <v-divider></v-divider>\r\n    <v-container fluid>\r\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n        <v-text-field\r\n          v-model=\"email\"\r\n          :rules=\"emailRules\"\r\n          label=\"E-mail\"\r\n          required\r\n          append-icon=\"mdi mdi-email\"\r\n        ></v-text-field>\r\n        <v-text-field\r\n          v-model=\"password\"\r\n          :append-icon=\"showPassword ? 'mdi mdi-eye' : 'mdi mdi-eye-off'\"\r\n          :rules=\"passwordRules\"\r\n          :type=\"showPassword ? 'text' : 'password'\"\r\n          label=\"Password\"\r\n          hint=\"At least 6 characters\"\r\n          counter\r\n          @click:append=\"showPassword = !showPassword\"\r\n        ></v-text-field>\r\n        <div class=\"text-xs-center\">\r\n          <v-btn color=\"accent lighten-1\" :disabled=\"!valid\" @click=\"submit\">\r\n            Login\r\n            <v-icon right dark>mdi mdi-lock-open</v-icon>\r\n          </v-btn>\r\n        </div>\r\n      </v-form>\r\n    </v-container>\r\n  </v-card>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"login\",\r\n  data() {\r\n    return {\r\n      valid: true,\r\n      email: \"danfardan16@gmail.com\",\r\n      emailRules: [\r\n        (v) => !!v || \"E-mail is required\",\r\n        (v) =>\r\n          /([a-zA-Z0-9_]{1,})(@)([a-zA-Z0-9_]{2,}).([a-zA-Z0-9_]{2,})+/.test(\r\n            v\r\n          ) || \"E-mail must be valid\",\r\n      ],\r\n      showPassword: false,\r\n      password: \"\",\r\n      passwordRules: [\r\n        (v) => !!v || \"Password required.\",\r\n        (v) => (v && v.length >= 6) || \"Min 6 characters\",\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      user: \"auth/user\",\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      setAlert: \"alert/set\",\r\n      setStatusDialog: \"dialog/setStatus\",\r\n      setAuth: \"auth/set\",\r\n    }),\r\n    close() {\r\n      this.setStatusDialog(false);\r\n    },\r\n    submit() {\r\n      if (this.$refs.form.validate()) {\r\n        let formData = {\r\n          email: this.email,\r\n          password: this.password,\r\n        };\r\n        this.axios\r\n          .post(\"/login\", formData)\r\n          .then((response) => {\r\n            let data_user = response.data.data;\r\n            this.setAuth(data_user);\r\n            if (this.user.id > 0) {\r\n              this.setAlert({\r\n                status: true,\r\n                text: \"Login success\",\r\n                type: \"success\",\r\n              });\r\n              this.setStatusDialog(false);\r\n            } else {\r\n              this.setAlert({\r\n                status: true,\r\n                text: \"Login error\",\r\n                type: \"error\",\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            let responses = error.response;\r\n            this.setAlert({\r\n              status: true,\r\n              text: responses.data.message,\r\n              type: \"error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}