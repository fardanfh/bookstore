{"ast":null,"code":"import _objectSpread from \"C:/Users/Fardin/Documents/ngoding/bookstores/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      book: {}\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    addCart: \"cart/add\",\n    setAlert: \"alert/set\"\n  })), {}, {\n    buy: function buy() {\n      this.addCart(this.book);\n      this.setAlert({\n        status: true,\n        text: \"Added to cart\",\n        type: \"success\"\n      });\n    }\n  }),\n  created: function created() {\n    var _this = this;\n\n    var slug = this.$route.params.slug;\n    this.axios.get(\"/books/slug/\" + slug).then(function (response) {\n      var book = response.data.data;\n      _this.book = book;\n    }).catch(function (error) {\n      var responses = error.response;\n      console.log(responses);\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;EACAA,IADA,kBACA;IACA;MACAC;IADA;EAGA,CALA;EAMAC,yCACAC;IACAC,mBADA;IAEAC;EAFA,EADA;IAKAC,GALA,iBAKA;MACA;MACA;QACAC,YADA;QAEAC,qBAFA;QAGAC;MAHA;IAKA;EAZA,EANA;EAoBAC,OApBA,qBAoBA;IAAA;;IACA;IACA,WACAC,GADA,CACA,qBADA,EAEAC,IAFA,CAEA;MACA;MACA;IACA,CALA,EAMAC,KANA,CAMA;MACA;MACAC;IACA,CATA;EAUA;AAhCA","names":["data","book","methods","mapActions","addCart","setAlert","buy","status","text","type","created","get","then","catch","console"],"sourceRoot":"src/views","sources":["BookView.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-subheader class=\"title\">\r\n      {{ book.title }}\r\n    </v-subheader>\r\n    <v-img\r\n      v-if=\"book.cover\"\r\n      :src=\"getImage('/books/' + book.cover)\"\r\n      height=\"200px\"\r\n    ></v-img>\r\n    <v-subheader>Information</v-subheader>\r\n    <table class=\"v-data-table\">\r\n      <tbody>\r\n        <tr>\r\n          <th class=\"text-xs-left\">Author</th>\r\n          <td>{{ book.author }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"text-xs-left\">Publisher</th>\r\n          <td>{{ book.publisher }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"text-xs-left\">Price</th>\r\n          <td v-if=\"book.price\">\r\n            Rp. {{ book.price.toLocaleString(\"id-ID\") }}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"text-xs-left\">Weight</th>\r\n          <td>{{ book.weight }} Kg</td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"text-xs-left\">Stock</th>\r\n          <td>{{ book.stock }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"text-xs-left\">Categories</th>\r\n          <td>\r\n            <template v-for=\"category in book.categories\">\r\n              {{ category.name }},\r\n            </template>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <v-subheader>Description</v-subheader>\r\n    <p class=\"body-2\">\r\n      {{ book.description }}\r\n    </p>\r\n    <div style=\"position: relative\">\r\n      <v-btn block color=\"success\" @click=\"buy\" :disabled=\"book.stock == 0\">\r\n        <v-icon>mdi mdi-tray-arrow-down</v-icon> &nbsp; BUY\r\n      </v-btn>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      book: {},\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      addCart: \"cart/add\",\r\n      setAlert: \"alert/set\",\r\n    }),\r\n    buy() {\r\n      this.addCart(this.book);\r\n      this.setAlert({\r\n        status: true,\r\n        text: \"Added to cart\",\r\n        type: \"success\",\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    let slug = this.$route.params.slug;\r\n    this.axios\r\n      .get(\"/books/slug/\" + slug)\r\n      .then((response) => {\r\n        let book = response.data.data;\r\n        this.book = book;\r\n      })\r\n      .catch((error) => {\r\n        let responses = error.response;\r\n        console.log(responses);\r\n      });\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}