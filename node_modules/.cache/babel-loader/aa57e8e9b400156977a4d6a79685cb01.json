{"ast":null,"code":"import _objectSpread from \"C:/Users/Fardin/Documents/ngoding/bookstores/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      orderDetail: {},\n      totalPrice: 0,\n      invoice: \"\",\n      totalQuantity: 0\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    user: \"auth/user\"\n  })),\n  methods: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    var invoice = this.$route.params.invoice;\n    this.invoice = invoice;\n    var formData = new FormData();\n    formData.set(\"invoice\", invoice);\n    var config = {\n      headers: {\n        Authorization: \"Bearer \" + this.user.api_token\n      }\n    };\n    this.axios.post(\"/order-detail\", formData, config).then(function (response) {\n      var orderDetail = response.data.data;\n      _this.orderDetail = orderDetail;\n      _this.totalPrice = orderDetail[0].total_price.toLocaleString(\"id-ID\");\n      orderDetail.forEach(function (item) {\n        _this.totalQuantity += item.quantity;\n      });\n    }).catch(function (error) {\n      var responses = error.response;\n      console.log(responses);\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;EACAA,IADA,kBACA;IACA;MACAC,eADA;MAEAC,aAFA;MAGAC,WAHA;MAIAC;IAJA;EAMA,CARA;EASAC,4BACAC;IACAC;EADA,EADA,CATA;EAcAC,WAdA;EAeAC,OAfA,qBAeA;IAAA;;IACA;IACA;IACA;IACAC;IACA;MACAC;QACAC;MADA;IADA;IAKA,WACAC,IADA,CACA,eADA,EACAH,QADA,EACAI,MADA,EAEAC,IAFA,CAEA;MACA;MACA;MACA;MACAd;QACA;MACA,CAFA;IAGA,CATA,EAUAe,KAVA,CAUA;MACA;MACAC;IACA,CAbA;EAcA;AAvCA","names":["data","orderDetail","totalPrice","invoice","totalQuantity","computed","mapGetters","user","methods","mounted","formData","headers","Authorization","post","config","then","catch","console"],"sourceRoot":"src/views","sources":["OrderDetailView.vue"],"sourcesContent":["<template>\r\n  <v-card>\r\n    <v-toolbar dark color=\"success\">\r\n      <v-toolbar-title> Your Order Details ! </v-toolbar-title>\r\n    </v-toolbar>\r\n    <v-divider></v-divider>\r\n    <v-container fluid>\r\n      <v-list three-line>\r\n        <template v-for=\"(item, index) in orderDetail\">\r\n          <v-list-item :key=\"'order' + index\" :to=\"'/gadget/' + item.slug\">\r\n            <v-list-item-avatar>\r\n              <v-img :src=\"getImage(item.cover)\" contain></v-img>\r\n            </v-list-item-avatar>\r\n\r\n            <v-list-item-content>\r\n              <v-list-item-title v-html=\"item.merk\"></v-list-item-title>\r\n              <v-list-item-subtitle>\r\n                Rp. {{ item.price.toLocaleString(\"id-ID\") }} ({{ item.weight }}\r\n                kg)\r\n                <span style=\"float: right\"> x {{ item.quantity }} </span>\r\n              </v-list-item-subtitle>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </template>\r\n      </v-list>\r\n      <v-card>\r\n        <v-card-text>\r\n          <v-layout wrap>\r\n            <v-flex pa-1>\r\n              No. Invoice : {{ invoice }}<br />\r\n              Total Price ({{ totalQuantity }} items) <br />\r\n              <span class=\"title\"> Rp. {{ totalPrice }} </span>\r\n            </v-flex>\r\n          </v-layout>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-container>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      orderDetail: {},\r\n      totalPrice: 0,\r\n      invoice: \"\",\r\n      totalQuantity: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      user: \"auth/user\",\r\n    }),\r\n  },\r\n  methods: {},\r\n  mounted() {\r\n    let invoice = this.$route.params.invoice;\r\n    this.invoice = invoice;\r\n    let formData = new FormData();\r\n    formData.set(\"invoice\", invoice);\r\n    let config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.user.api_token,\r\n      },\r\n    };\r\n    this.axios\r\n      .post(\"/order-detail\", formData, config)\r\n      .then((response) => {\r\n        let orderDetail = response.data.data;\r\n        this.orderDetail = orderDetail;\r\n        this.totalPrice = orderDetail[0].total_price.toLocaleString(\"id-ID\");\r\n        orderDetail.forEach((item) => {\r\n          this.totalQuantity += item.quantity;\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        let responses = error.response;\r\n        console.log(responses);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}