{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  namespaced: true,\n  state: {\n    carts: []\n  },\n  mutations: {\n    insert: function insert(state, payload) {\n      state.carts.push({\n        id: payload.id,\n        title: payload.title,\n        cover: payload.cover,\n        price: payload.price,\n        weight: payload.weight,\n        quantity: 1\n      });\n    },\n    update: function update(state, payload) {\n      var idx = state.carts.indexOf(payload);\n      state.carts.splice(idx, 1, {\n        id: payload.id,\n        name: payload.name,\n        cover: payload.cover,\n        price: payload.price,\n        weight: payload.weight,\n        quantity: payload.quantity\n      });\n\n      if (payload.quantity <= 0) {\n        state.carts.splice(idx, 1);\n      }\n    },\n    set: function set(state, payload) {\n      state.carts = payload;\n    }\n  },\n  actions: {\n    add: function add(_ref, payload) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      var cartItem = state.carts.find(function (item) {\n        return item.id === payload.id;\n      });\n\n      if (!cartItem) {\n        commit(\"insert\", payload);\n      } else {\n        cartItem.quantity++;\n        commit(\"update\", cartItem);\n      }\n    }\n  },\n  getters: {\n    carts: function carts(state) {\n      return state.carts;\n    },\n    count: function count(state) {\n      return state.carts.length;\n    }\n  }\n};","map":{"version":3,"names":["namespaced","state","carts","mutations","insert","payload","push","id","title","cover","price","weight","quantity","update","idx","indexOf","splice","name","set","actions","add","commit","cartItem","find","item","getters","count","length"],"sources":["C:/Users/Fardin/Documents/ngoding/bookstores/src/store/cart.js"],"sourcesContent":["export default {\r\n  namespaced: true,\r\n  state: {\r\n      carts : [],\r\n  },\r\n  mutations: {\r\n      insert: (state, payload) => {\r\n        state.carts.push({\r\n            id: payload.id,\r\n            title : payload.title,\r\n            cover : payload.cover,\r\n            price: payload.price,\r\n            weight: payload.weight,\r\n            quantity : 1\r\n        })\r\n      },\r\n      update: (state, payload) => {\r\n      let idx = state.carts.indexOf(payload);\r\n      state.carts.splice(idx, 1, {\r\n        id: payload.id,\r\n        name: payload.name,\r\n        cover: payload.cover,\r\n        price: payload.price,\r\n        weight: payload.weight,\r\n        quantity: payload.quantity,\r\n      });\r\n      if (payload.quantity <= 0) {\r\n        state.carts.splice(idx, 1);\r\n      }\r\n    },\r\n    set: (state, payload) => {\r\n      state.carts = payload;\r\n    },\r\n  },\r\n  actions: {\r\n      add: ({ state, commit }, payload) => {\r\n      let cartItem = state.carts.find((item) => item.id === payload.id);\r\n      if (!cartItem) {\r\n        commit(\"insert\", payload);\r\n      } else {\r\n        cartItem.quantity++;\r\n        commit(\"update\", cartItem);\r\n      }\r\n    },\r\n  },\r\n  getters: {\r\n      carts : state => state.carts,\r\n      count: (state) => {\r\n        return state.carts.length;\r\n      },\r\n  }\r\n};"],"mappings":";;;;AAAA,eAAe;EACbA,UAAU,EAAE,IADC;EAEbC,KAAK,EAAE;IACHC,KAAK,EAAG;EADL,CAFM;EAKbC,SAAS,EAAE;IACPC,MAAM,EAAE,gBAACH,KAAD,EAAQI,OAAR,EAAoB;MAC1BJ,KAAK,CAACC,KAAN,CAAYI,IAAZ,CAAiB;QACbC,EAAE,EAAEF,OAAO,CAACE,EADC;QAEbC,KAAK,EAAGH,OAAO,CAACG,KAFH;QAGbC,KAAK,EAAGJ,OAAO,CAACI,KAHH;QAIbC,KAAK,EAAEL,OAAO,CAACK,KAJF;QAKbC,MAAM,EAAEN,OAAO,CAACM,MALH;QAMbC,QAAQ,EAAG;MANE,CAAjB;IAQD,CAVM;IAWPC,MAAM,EAAE,gBAACZ,KAAD,EAAQI,OAAR,EAAoB;MAC5B,IAAIS,GAAG,GAAGb,KAAK,CAACC,KAAN,CAAYa,OAAZ,CAAoBV,OAApB,CAAV;MACAJ,KAAK,CAACC,KAAN,CAAYc,MAAZ,CAAmBF,GAAnB,EAAwB,CAAxB,EAA2B;QACzBP,EAAE,EAAEF,OAAO,CAACE,EADa;QAEzBU,IAAI,EAAEZ,OAAO,CAACY,IAFW;QAGzBR,KAAK,EAAEJ,OAAO,CAACI,KAHU;QAIzBC,KAAK,EAAEL,OAAO,CAACK,KAJU;QAKzBC,MAAM,EAAEN,OAAO,CAACM,MALS;QAMzBC,QAAQ,EAAEP,OAAO,CAACO;MANO,CAA3B;;MAQA,IAAIP,OAAO,CAACO,QAAR,IAAoB,CAAxB,EAA2B;QACzBX,KAAK,CAACC,KAAN,CAAYc,MAAZ,CAAmBF,GAAnB,EAAwB,CAAxB;MACD;IACF,CAxBQ;IAyBTI,GAAG,EAAE,aAACjB,KAAD,EAAQI,OAAR,EAAoB;MACvBJ,KAAK,CAACC,KAAN,GAAcG,OAAd;IACD;EA3BQ,CALE;EAkCbc,OAAO,EAAE;IACLC,GAAG,EAAE,mBAAoBf,OAApB,EAAgC;MAAA,IAA7BJ,KAA6B,QAA7BA,KAA6B;MAAA,IAAtBoB,MAAsB,QAAtBA,MAAsB;MACrC,IAAIC,QAAQ,GAAGrB,KAAK,CAACC,KAAN,CAAYqB,IAAZ,CAAiB,UAACC,IAAD;QAAA,OAAUA,IAAI,CAACjB,EAAL,KAAYF,OAAO,CAACE,EAA9B;MAAA,CAAjB,CAAf;;MACA,IAAI,CAACe,QAAL,EAAe;QACbD,MAAM,CAAC,QAAD,EAAWhB,OAAX,CAAN;MACD,CAFD,MAEO;QACLiB,QAAQ,CAACV,QAAT;QACAS,MAAM,CAAC,QAAD,EAAWC,QAAX,CAAN;MACD;IACF;EATM,CAlCI;EA6CbG,OAAO,EAAE;IACLvB,KAAK,EAAG,eAAAD,KAAK;MAAA,OAAIA,KAAK,CAACC,KAAV;IAAA,CADR;IAELwB,KAAK,EAAE,eAACzB,KAAD,EAAW;MAChB,OAAOA,KAAK,CAACC,KAAN,CAAYyB,MAAnB;IACD;EAJI;AA7CI,CAAf"},"metadata":{},"sourceType":"module"}