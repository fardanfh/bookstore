{"ast":null,"code":"import _objectSpread from \"C:/Users/Fardin/Documents/ngoding/bookstores/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.find.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      name: \"\",\n      address: \"\",\n      phone: \"\",\n      province_id: 0,\n      city_id: 0,\n      courier: \"\",\n      couriers: [],\n      service: \"\",\n      services: [],\n      shippingCost: 0,\n      totalBill: 0,\n      dialogConfirm: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    user: \"auth/user\",\n    provinces: \"region/provinces\",\n    cities: \"region/cities\",\n    carts: \"cart/carts\",\n    countCart: \"cart/count\",\n    totalPrice: \"cart/totalPrice\",\n    totalQuantity: \"cart/totalQuantity\",\n    totalWeight: \"cart/totalWeight\"\n  })), {}, {\n    citiesByProvince: function citiesByProvince() {\n      var province_id = this.province_id;\n      return this.cities.filter(function (city) {\n        if (city.province_id == province_id) return city;\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    setAlert: \"alert/set\",\n    setAuth: \"auth/set\",\n    setProvices: \"region/setProvinces\",\n    setCities: \"region/setCities\",\n    setCart: \"cart/set\",\n    setPayment: \"setPayment\"\n  })), {}, {\n    saveShipping: function saveShipping() {\n      var _this = this;\n\n      var formData = new FormData();\n      formData.set(\"name\", this.name);\n      formData.set(\"address\", this.address);\n      formData.set(\"phone\", this.phone);\n      formData.set(\"province_id\", this.province_id);\n      formData.set(\"city_id\", this.city_id);\n      var config = {\n        headers: {\n          Authorization: \"Bearer \" + this.user.api_token\n        }\n      };\n      this.axios.post(\"/shipping\", formData, config).then(function (response) {\n        _this.setAuth(response.data.data);\n\n        _this.setAlert({\n          status: true,\n          text: response.data.message,\n          type: \"success\"\n        });\n      }).catch(function (err) {\n        var responses = err.response;\n\n        _this.setAlert({\n          status: true,\n          text: responses.data.message,\n          type: \"error\"\n        });\n      });\n    },\n    getServices: function getServices() {\n      var _this2 = this;\n\n      var courier = this.courier;\n      var encodedCart = JSON.stringify(this.carts);\n      var formData = new FormData();\n      formData.set(\"courier\", courier);\n      formData.set(\"carts\", encodedCart);\n      var config = {\n        headers: {\n          Authorization: \"Bearer \" + this.user.api_token\n        }\n      };\n      this.axios.post(\"/services\", formData, config).then(function (result) {\n        var result_data = result.data; // Jika tidak error maka data service dan cart akan di update\n\n        if (result_data.status != \"error\") {\n          _this2.services = result_data.data.services;\n\n          _this2.setCart(result_data.data.safe_carts);\n        }\n\n        _this2.setAlert({\n          status: \"true\",\n          text: result_data.message,\n          color: result_data.status\n        });\n      }).catch(function (err) {\n        var results = err.result;\n\n        _this2.setAlert({\n          status: true,\n          text: results.data.message,\n          color: \"error\"\n        });\n      });\n    },\n    calculateBill: function calculateBill() {\n      var _this3 = this;\n\n      var selectedService = this.services.find(function (service) {\n        return service.service == _this3.service;\n      });\n      this.shippingCost = selectedService.cost;\n      this.totalBill = parseInt(this.totalPrice) + parseInt(this.shippingCost);\n    },\n    pay: function pay() {\n      var _this4 = this;\n\n      this.dialogConfirm = false;\n      var courier = this.courier;\n      var service = this.service;\n      var safeCart = JSON.stringify(this.carts);\n      var formData = new FormData();\n      formData.set(\"courier\", courier);\n      formData.set(\"service\", service);\n      formData.set(\"carts\", safeCart);\n      var config = {\n        headers: {\n          Authorization: \"Bearer \" + this.user.api_token\n        }\n      };\n      this.axios.post(\"/payment\", formData, config).then(function (response) {\n        var data = response.data;\n\n        if (data && data.status == \"success\") {\n          _this4.setPayment(data.data);\n\n          _this4.$router.push({\n            path: \"/payment\"\n          });\n\n          _this4.setCart([]);\n        }\n\n        _this4.setAlert({\n          status: true,\n          text: data.message,\n          color: data.status\n        });\n      }).catch(function (error) {\n        var data = error.response.data;\n\n        _this4.setAlert({\n          status: true,\n          text: data.message,\n          color: \"error\"\n        });\n      });\n    },\n    cancel: function cancel() {\n      this.dialogConfirm = false;\n    }\n  }),\n  created: function created() {\n    var _this5 = this;\n\n    this.name = this.user.name, this.address = this.user.address, this.phone = this.user.phone, this.city_id = this.user.city_id, this.province_id = this.user.province_id;\n\n    if (this.provinces && this.provinces.length == 0) {\n      this.axios.get(\"/provinces\").then(function (res) {\n        _this5.setProvices(res.data.data);\n      });\n      this.axios.get(\"/cities\").then(function (res) {\n        _this5.setCities(res.data.data);\n      });\n    }\n\n    if (this.couriers.length == 0) {\n      this.axios.get(\"/couriers\").then(function (res) {\n        _this5.couriers = res.data.data;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;EACAA,IADA,kBACA;IACA;MACAC,QADA;MAEAC,WAFA;MAGAC,SAHA;MAIAC,cAJA;MAKAC,UALA;MAMAC,WANA;MAOAC,YAPA;MAQAC,WARA;MASAC,YATA;MAUAC,eAVA;MAWAC,YAXA;MAYAC;IAZA;EAcA,CAhBA;EAiBAC,0CACAC;IACAC,iBADA;IAEAC,6BAFA;IAGAC,uBAHA;IAIAC,mBAJA;IAKAC,uBALA;IAMAC,6BANA;IAOAC,mCAPA;IAQAC;EARA,EADA;IAWAC,gBAXA,8BAWA;MACA;MACA;QACA;MACA,CAFA;IAGA;EAhBA,EAjBA;EAmCAC,yCACAC;IACAC,qBADA;IAEAC,mBAFA;IAGAC,kCAHA;IAIAC,6BAJA;IAKAC,mBALA;IAMAC;EANA,EADA;IASAC,YATA,0BASA;MAAA;;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACA;QACAC;UACAC;QADA;MADA;MAKA,WACAC,IADA,CACA,WADA,EACAH,QADA,EACAI,MADA,EAEAC,IAFA,CAEA;QACA;;QACA;UACAC,YADA;UAEAC,2BAFA;UAGAC;QAHA;MAKA,CATA,EAUAC,KAVA,CAUA;QACA;;QACA;UACAH,YADA;UAEAC,4BAFA;UAGAC;QAHA;MAKA,CAjBA;IAkBA,CAvCA;IAwCAE,WAxCA,yBAwCA;MAAA;;MACA;MACA;MACA;MACAV;MACAA;MACA;QACAC;UACAC;QADA;MADA;MAKA,WACAC,IADA,CACA,WADA,EACAH,QADA,EACAI,MADA,EAEAC,IAFA,CAEA;QACA,8BADA,CAEA;;QACA;UACA;;UACA;QACA;;QACA;UACAC,cADA;UAEAC,yBAFA;UAGAI;QAHA;MAKA,CAdA,EAeAF,KAfA,CAeA;QACA;;QACA;UACAH,YADA;UAEAC,0BAFA;UAGAI;QAHA;MAKA,CAtBA;IAuBA,CA1EA;IA2EAC,aA3EA,2BA2EA;MAAA;;MACA;QACA;MACA,CAFA;MAGA;MACA;IACA,CAjFA;IAkFAC,GAlFA,iBAkFA;MAAA;;MACA;MACA;MACA;MACA;MACA;MACAb;MACAA;MACAA;MACA;QACAC;UACAC;QADA;MADA;MAKA,WACAC,IADA,CACA,UADA,EACAH,QADA,EACAI,MADA,EAEAC,IAFA,CAEA;QACA;;QACA;UACA;;UACA;YAAAS;UAAA;;UACA;QACA;;QACA;UACAR,YADA;UAEAC,kBAFA;UAGAI;QAHA;MAKA,CAdA,EAeAF,KAfA,CAeA;QACA;;QACA;UACAH,YADA;UAEAC,kBAFA;UAGAI;QAHA;MAKA,CAtBA;IAuBA,CAvHA;IAwHAI,MAxHA,oBAwHA;MACA;IACA;EA1HA,EAnCA;EA+JAC,OA/JA,qBA+JA;IAAA;;IACA,4BACA,gCADA,EAEA,4BAFA,EAGA,gCAHA,EAIA,wCAJA;;IAKA;MACA;QACA;MACA,CAFA;MAGA;QACA;MACA,CAFA;IAGA;;IACA;MACA;QACA;MACA,CAFA;IAGA;EACA;AAlLA","names":["data","name","address","phone","province_id","city_id","courier","couriers","service","services","shippingCost","totalBill","dialogConfirm","computed","mapGetters","user","provinces","cities","carts","countCart","totalPrice","totalQuantity","totalWeight","citiesByProvince","methods","mapActions","setAlert","setAuth","setProvices","setCities","setCart","setPayment","saveShipping","formData","headers","Authorization","post","config","then","status","text","type","catch","getServices","color","calculateBill","pay","path","cancel","created"],"sourceRoot":"src/views","sources":["CheckoutView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-subheader>Shipping Address</v-subheader>\r\n    <div>\r\n      <v-card flat>\r\n        <v-container>\r\n          <v-form ref=\"form\" lazy-validation>\r\n            <v-text-field\r\n              label=\"Name\"\r\n              v-model=\"name\"\r\n              required\r\n              append-icon=\"mdi mdi-account\"\r\n            ></v-text-field>\r\n            <v-textarea\r\n              label=\"Address\"\r\n              v-model=\"address\"\r\n              required\r\n              auto-grow\r\n              rows=\"3\"\r\n            ></v-textarea>\r\n            <v-text-field\r\n              label=\"Phone\"\r\n              v-model=\"phone\"\r\n              required\r\n              append-icon=\"mdi mdi-phone\"\r\n            ></v-text-field>\r\n            <v-select\r\n              v-model=\"province_id\"\r\n              :items=\"provinces\"\r\n              item-text=\"province\"\r\n              item-value=\"id\"\r\n              label=\"Province\"\r\n              persistent-hint\r\n              single-line\r\n            ></v-select>\r\n            <v-select\r\n              v-model=\"city_id\"\r\n              v-if=\"province_id > 0\"\r\n              :items=\"citiesByProvince\"\r\n              item-text=\"city\"\r\n              item-value=\"id\"\r\n              label=\"City\"\r\n              persistent-hint\r\n              single-line\r\n            ></v-select>\r\n          </v-form>\r\n          <v-card-actions>\r\n            <v-btn color=\"success\" dark @click=\"saveShipping\">\r\n              <v-icon>mdi content-save</v-icon>&nbsp; Save\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-container>\r\n      </v-card>\r\n    </div>\r\n    <v-subheader>Your Shopping Cart!</v-subheader>\r\n    <div v-if=\"countCart > 0\">\r\n      <v-card flat>\r\n        <v-list three-line v-if=\"countCart > 0\">\r\n          <template v-for=\"(item, index) in carts\">\r\n            <v-list-item :key=\"'cart' + index\">\r\n              <v-list-item-avatar>\r\n                <v-img :src=\"getImage('/books/' + item.cover)\"></v-img>\r\n              </v-list-item-avatar>\r\n              <v-list-item-content>\r\n                <v-list-item-title v-html=\"item.title\"></v-list-item-title>\r\n                <v-list-item-subtitle>\r\n                  Rp. {{ item.price.toLocaleString(\"id-ID\") }} ({{\r\n                    item.weight\r\n                  }}\r\n                  kg)\r\n                  <span style=\"float: right\">{{ item.quantity }}</span>\r\n                </v-list-item-subtitle>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </template>\r\n        </v-list>\r\n        <v-container>\r\n          <v-card-actions>\r\n            Subtotal\r\n            <v-spacer />\r\n            Rp. {{ totalPrice }}\r\n          </v-card-actions>\r\n        </v-container>\r\n      </v-card>\r\n    </div>\r\n    <v-subheader>Courier</v-subheader>\r\n    <div>\r\n      <v-card flat>\r\n        <v-container>\r\n          <v-select\r\n            v-model=\"courier\"\r\n            :items=\"couriers\"\r\n            @change=\"getServices\"\r\n            item-text=\"text\"\r\n            item-value=\"id\"\r\n            label=\"Courier\"\r\n            persistent-hint\r\n            single-line\r\n          ></v-select>\r\n          <v-select\r\n            v-model=\"service\"\r\n            v-if=\"courier\"\r\n            :items=\"services\"\r\n            @change=\"calculateBill\"\r\n            item-text=\"resume\"\r\n            item-value=\"service\"\r\n            label=\"Courier Service\"\r\n            persistent-hint\r\n            single-line\r\n          ></v-select>\r\n        </v-container>\r\n\r\n        <v-card-actions>\r\n          Subtotal\r\n          <v-spacer />\r\n          Rp. {{ shippingCost.toLocaleString(\"id-ID\") }}\r\n        </v-card-actions>\r\n      </v-card>\r\n    </div>\r\n    <v-subheader>Total</v-subheader>\r\n    <v-card>\r\n      <v-container>\r\n        <v-layout row wrap>\r\n          <v-flex xs6 text-center>\r\n            <br />\r\n            Total Bill ({{ totalQuantity }} items)\r\n            <div class=\"title\">{{ totalBill.toLocaleString(\"id-ID\") }}</div>\r\n          </v-flex>\r\n          <v-flex xs6 text-center>\r\n            <b></b>\r\n            <v-btn color=\"orange\" @click=\"dialogConfirm = true\">\r\n              <v-icon light>mdi mdi-currency-usd</v-icon>&nbsp; Pay\r\n            </v-btn>\r\n          </v-flex>\r\n        </v-layout>\r\n      </v-container> </v-card\r\n    ><br />\r\n\r\n    <template>\r\n      <v-layout row justify-center>\r\n        <v-dialog v-model=\"dialogConfirm\" persistent max-width=\"290\">\r\n          <v-card>\r\n            <v-card-title class=\"headline\">Confirmation!</v-card-title>\r\n            <v-card-text\r\n              >If you continue, transaction will be processed</v-card-text\r\n            >\r\n            <v-card-actions>\r\n              <v-btn color=\"warning\" @click=\"cancel\">Cancel</v-btn>\r\n              <v-spacer></v-spacer>\r\n              <v-btn color=\"success\" @click=\"pay\">Continue</v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-dialog>\r\n      </v-layout>\r\n    </template>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      province_id: 0,\r\n      city_id: 0,\r\n      courier: \"\",\r\n      couriers: [],\r\n      service: \"\",\r\n      services: [],\r\n      shippingCost: 0,\r\n      totalBill: 0,\r\n      dialogConfirm: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      user: \"auth/user\",\r\n      provinces: \"region/provinces\",\r\n      cities: \"region/cities\",\r\n      carts: \"cart/carts\",\r\n      countCart: \"cart/count\",\r\n      totalPrice: \"cart/totalPrice\",\r\n      totalQuantity: \"cart/totalQuantity\",\r\n      totalWeight: \"cart/totalWeight\",\r\n    }),\r\n    citiesByProvince() {\r\n      let province_id = this.province_id;\r\n      return this.cities.filter(function (city) {\r\n        if (city.province_id == province_id) return city;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      setAlert: \"alert/set\",\r\n      setAuth: \"auth/set\",\r\n      setProvices: \"region/setProvinces\",\r\n      setCities: \"region/setCities\",\r\n      setCart: \"cart/set\",\r\n      setPayment: \"setPayment\",\r\n    }),\r\n    saveShipping() {\r\n      let formData = new FormData();\r\n      formData.set(\"name\", this.name);\r\n      formData.set(\"address\", this.address);\r\n      formData.set(\"phone\", this.phone);\r\n      formData.set(\"province_id\", this.province_id);\r\n      formData.set(\"city_id\", this.city_id);\r\n      let config = {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.user.api_token,\r\n        },\r\n      };\r\n      this.axios\r\n        .post(\"/shipping\", formData, config)\r\n        .then((response) => {\r\n          this.setAuth(response.data.data);\r\n          this.setAlert({\r\n            status: true,\r\n            text: response.data.message,\r\n            type: \"success\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          let responses = err.response;\r\n          this.setAlert({\r\n            status: true,\r\n            text: responses.data.message,\r\n            type: \"error\",\r\n          });\r\n        });\r\n    },\r\n    getServices() {\r\n      let courier = this.courier;\r\n      let encodedCart = JSON.stringify(this.carts);\r\n      let formData = new FormData();\r\n      formData.set(\"courier\", courier);\r\n      formData.set(\"carts\", encodedCart);\r\n      let config = {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.user.api_token,\r\n        },\r\n      };\r\n      this.axios\r\n        .post(\"/services\", formData, config)\r\n        .then((result) => {\r\n          let result_data = result.data;\r\n          // Jika tidak error maka data service dan cart akan di update\r\n          if (result_data.status != \"error\") {\r\n            this.services = result_data.data.services;\r\n            this.setCart(result_data.data.safe_carts);\r\n          }\r\n          this.setAlert({\r\n            status: \"true\",\r\n            text: result_data.message,\r\n            color: result_data.status,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          let results = err.result;\r\n          this.setAlert({\r\n            status: true,\r\n            text: results.data.message,\r\n            color: \"error\",\r\n          });\r\n        });\r\n    },\r\n    calculateBill() {\r\n      let selectedService = this.services.find((service) => {\r\n        return service.service == this.service;\r\n      });\r\n      this.shippingCost = selectedService.cost;\r\n      this.totalBill = parseInt(this.totalPrice) + parseInt(this.shippingCost);\r\n    },\r\n    pay() {\r\n      this.dialogConfirm = false;\r\n      let courier = this.courier;\r\n      let service = this.service;\r\n      let safeCart = JSON.stringify(this.carts);\r\n      let formData = new FormData();\r\n      formData.set(\"courier\", courier);\r\n      formData.set(\"service\", service);\r\n      formData.set(\"carts\", safeCart);\r\n      let config = {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.user.api_token,\r\n        },\r\n      };\r\n      this.axios\r\n        .post(\"/payment\", formData, config)\r\n        .then((response) => {\r\n          let { data } = response;\r\n          if (data && data.status == \"success\") {\r\n            this.setPayment(data.data);\r\n            this.$router.push({ path: \"/payment\" });\r\n            this.setCart([]);\r\n          }\r\n          this.setAlert({\r\n            status: true,\r\n            text: data.message,\r\n            color: data.status,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          let { data } = error.response;\r\n          this.setAlert({\r\n            status: true,\r\n            text: data.message,\r\n            color: \"error\",\r\n          });\r\n        });\r\n    },\r\n    cancel() {\r\n      this.dialogConfirm = false;\r\n    },\r\n  },\r\n  created() {\r\n    (this.name = this.user.name),\r\n      (this.address = this.user.address),\r\n      (this.phone = this.user.phone),\r\n      (this.city_id = this.user.city_id),\r\n      (this.province_id = this.user.province_id);\r\n    if (this.provinces && this.provinces.length == 0) {\r\n      this.axios.get(\"/provinces\").then((res) => {\r\n        this.setProvices(res.data.data);\r\n      });\r\n      this.axios.get(\"/cities\").then((res) => {\r\n        this.setCities(res.data.data);\r\n      });\r\n    }\r\n    if (this.couriers.length == 0) {\r\n      this.axios.get(\"/couriers\").then((res) => {\r\n        this.couriers = res.data.data;\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}