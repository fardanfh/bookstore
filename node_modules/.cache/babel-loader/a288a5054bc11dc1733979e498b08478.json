{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nexport default {\n  namespaced: true,\n  state: {\n    carts: []\n  },\n  mutations: {\n    insert: function insert(state, payload) {\n      state.carts.push({\n        id: payload.id,\n        name: payload.name,\n        cover: payload.cover,\n        price: payload.price,\n        weight: payload.weight,\n        quantity: 1\n      });\n    },\n    update: function update(state, payload) {\n      var idx = state.carts.indexOf(payload);\n      state.carts.splice(idx, 1, {\n        id: payload.id,\n        name: payload.name,\n        cover: payload.cover,\n        price: payload.price,\n        weight: payload.weight,\n        quantity: payload.quantity\n      });\n\n      if (payload.quantity <= 0) {\n        state.carts.splice(idx, 1);\n      }\n    },\n    set: function set(state, payload) {\n      state.carts = payload;\n    }\n  },\n  actions: {\n    add: function add(_ref, payload) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      var cartItem = state.carts.find(function (item) {\n        return item.id === payload.id;\n      });\n\n      if (!cartItem) {\n        commit(\"insert\", payload);\n      } else {\n        cartItem.quantity++;\n        commit(\"update\", cartItem);\n      }\n    },\n    remove: function remove(_ref2, payload) {\n      var state = _ref2.state,\n          commit = _ref2.commit;\n      var cartItem = state.carts.find(function (item) {\n        return item.id === payload.id;\n      });\n\n      if (!cartItem) {\n        commit(\"insert\", payload);\n      } else {\n        cartItem.quantity--;\n        commit(\"update\", cartItem);\n      }\n    }\n  },\n  getters: {\n    carts: function carts(state) {\n      return state.carts;\n    },\n    count: function count(state) {\n      return state.carts.length;\n    },\n    totalPrice: function totalPrice(state) {\n      var total = 0;\n      state.carts.forEach(function (cart) {\n        total += cart.price * cart.quantity;\n      });\n      return total;\n    },\n    totalQuantity: function totalQuantity(state) {\n      var total = 0;\n      state.carts.forEach(function (cart) {\n        total += cart.quantity;\n      });\n      return total;\n    },\n    totalWeight: function totalWeight(state) {\n      var total = 0;\n      state.carts.forEach(function (cart) {\n        total += cart.weight;\n      });\n      return total;\n    }\n  }\n};","map":{"version":3,"names":["namespaced","state","carts","mutations","insert","payload","push","id","name","cover","price","weight","quantity","update","idx","indexOf","splice","set","actions","add","commit","cartItem","find","item","remove","getters","count","length","totalPrice","total","forEach","cart","totalQuantity","totalWeight"],"sources":["C:/Users/Fardin/Documents/ngoding/bookstores/src/store/cart.js"],"sourcesContent":["export default {\r\n  namespaced: true,\r\n  state: {\r\n    carts: [],\r\n  },\r\n  mutations: {\r\n    insert: (state, payload) => {\r\n      state.carts.push({\r\n        id: payload.id,\r\n        name: payload.name,\r\n        cover: payload.cover,\r\n        price: payload.price,\r\n        weight: payload.weight,\r\n        quantity: 1,\r\n      });\r\n    },\r\n    update: (state, payload) => {\r\n      let idx = state.carts.indexOf(payload);\r\n      state.carts.splice(idx, 1, {\r\n        id: payload.id,\r\n        name: payload.name,\r\n        cover: payload.cover,\r\n        price: payload.price,\r\n        weight: payload.weight,\r\n        quantity: payload.quantity,\r\n      });\r\n      if (payload.quantity <= 0) {\r\n        state.carts.splice(idx, 1);\r\n      }\r\n    },\r\n    set: (state, payload) => {\r\n      state.carts = payload;\r\n    },\r\n  },\r\n  actions: {\r\n    add: ({ state, commit }, payload) => {\r\n      let cartItem = state.carts.find((item) => item.id === payload.id);\r\n      if (!cartItem) {\r\n        commit(\"insert\", payload);\r\n      } else {\r\n        cartItem.quantity++;\r\n        commit(\"update\", cartItem);\r\n      }\r\n    },\r\n    remove: ({ state, commit }, payload) => {\r\n      let cartItem = state.carts.find((item) => item.id === payload.id);\r\n      if (!cartItem) {\r\n        commit(\"insert\", payload);\r\n      } else {\r\n        cartItem.quantity--;\r\n        commit(\"update\", cartItem);\r\n      }\r\n    },\r\n  },\r\n  getters: {\r\n    carts: (state) => state.carts,\r\n    count: (state) => {\r\n      return state.carts.length;\r\n    },\r\n    totalPrice: (state) => {\r\n      let total = 0;\r\n      state.carts.forEach(function(cart) {\r\n        total += cart.price * cart.quantity;\r\n      });\r\n      return total;\r\n    },\r\n    totalQuantity: (state) => {\r\n      let total = 0;\r\n      state.carts.forEach(function(cart) {\r\n        total += cart.quantity;\r\n      });\r\n      return total;\r\n    },\r\n    totalWeight: (state) => {\r\n      let total = 0;\r\n      state.carts.forEach(function(cart) {\r\n        total += cart.weight;\r\n      });\r\n      return total;\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}